package it.gov.mef.noipa.postemissione.pe_xmlloaderbatch.batch.cu;

import java.io.FileInputStream;
import java.io.InputStream;
import java.util.Date;
import java.util.Iterator;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.Unmarshaller;

import org.apache.log4j.Logger;
import org.springframework.batch.item.ExecutionContext;
import org.springframework.batch.item.ItemStreamException;
import org.springframework.batch.item.file.ResourceAwareItemReaderItemStream;
import org.springframework.core.io.Resource;

import it.gov.mef.noipa.postemissione.parser.autogenerated.cu.cu.Cedolini;

public class Reader implements ResourceAwareItemReaderItemStream<Cedolini.Cu> {

	private static final Logger LOGGER = Logger.getLogger(Reader.class);
	private Resource resource;
	private Iterator<Cedolini.Cu> iter;
	Date timeStart = new Date();
	
	public Cedolini.Cu read() throws Exception {
		
		if (iter == null){
			LOGGER.info(" called CU Reader " );
			Date timeMarshall = new Date();
			Cedolini cedolini=null;
			try {
				JAXBContext jc = JAXBContext.newInstance( "it.gov.mef.noipa.postemissione.parser.autogenerated.cu.cu" );
				Unmarshaller unmarshaller = jc.createUnmarshaller();
				InputStream is = new FileInputStream(resource.getFile().getPath());
				cedolini = (Cedolini) unmarshaller.unmarshal(is);
				iter = cedolini.getCu().iterator();
			} catch (Exception e) {
				LOGGER.error(e.getMessage(),e);
				throw e;
			}
			LOGGER.info(" CU Reader DONE" );
			LOGGER.info("Tempo unmarshall:" + (new Date().getTime() - timeMarshall.getTime() ));
		}
		
		if (iter.hasNext()){
			Cedolini.Cu result = iter.next();
			return result;
		}else {
			LOGGER.info("Tempo totale Iterator:" + (new Date().getTime() - timeStart.getTime() ));
			return null;
		}
	}


	public void setResource(Resource arg0) {
		resource = arg0;
	}


	public void close() throws ItemStreamException {
		LOGGER.info("close Reader");
	}


	public void open(ExecutionContext arg0) throws ItemStreamException {
		LOGGER.info("open Reader");
	}


	public void update(ExecutionContext arg0) throws ItemStreamException {
		LOGGER.info("update Reader");
	}


	public Iterator<Cedolini.Cu> getIter() {
		return iter;
	}


	public void setIter(Iterator<Cedolini.Cu> iter) {
		this.iter = iter;
	}

}
