package it.gov.mef.noipa.postemissione.parser.autogenerated.cud.depcudcon.types;

public class FamiliariCaricoType {
	protected String recordValue;

	public FamiliariCaricoType(String recordValue) {
		super();
		this.recordValue = recordValue;
	}

	public String getRecordValue() {
		return recordValue;
	}

	public void setRecordValue(String value) {
		this.recordValue = value;
	}

	public String getFiglio() {
		int startingPosition = 0;
		int length = 1;
		if (startingPosition < recordValue.length()) {
			return recordValue.substring(startingPosition,
					Math.min(startingPosition + length, recordValue.length()));
		} else {
			return null;
		}

	}

	public String getAltroFamiliare() {
		int startingPosition = 1;
		int length = 1;
		if (startingPosition < recordValue.length()) {
			return recordValue.substring(startingPosition,
					Math.min(startingPosition + length, recordValue.length()));
		} else {
			return null;
		}

	}

	public String getFiglioDisabile() {
		int startingPosition = 2;
		int length = 1;
		if (startingPosition < recordValue.length()) {
			return recordValue.substring(startingPosition,
					Math.min(startingPosition + length, recordValue.length()));
		} else {
			return null;
		}

	}

	public String getCodiceFiscale() {
		int startingPosition = 3;
		int length = 16;
		if (startingPosition < recordValue.length()) {
			return recordValue.substring(startingPosition,
					Math.min(startingPosition + length, recordValue.length()));
		} else {
			return null;
		}

	}

	public String getNumMesiCarico() {
		int startingPosition = 19;
		int length = 2;
		if (startingPosition < recordValue.length()) {
			return recordValue.substring(startingPosition,
					Math.min(startingPosition + length, recordValue.length()));
		} else {
			return null;
		}

	}

	public String getMinTreAnni() {
		int startingPosition = 21;
		int length = 2;
		if (startingPosition < recordValue.length()) {
			return recordValue.substring(startingPosition,
					Math.min(startingPosition + length, recordValue.length()));
		} else {
			return null;
		}

	}
	
	public String getPercDetrazione() {
		int startingPosition = 23;
		int length = 3;
		if (startingPosition < recordValue.length()) {
			return recordValue.substring(startingPosition,
					Math.min(startingPosition + length, recordValue.length()));
		} else {
			return null;
		}
		
	}
	
	public String getDetrazioneTotale() {
		int startingPosition = 26;
		int length = 1;
		if (startingPosition < recordValue.length()) {
			return recordValue.substring(startingPosition,
					Math.min(startingPosition + length, recordValue.length()));
		} else {
			return null;
		}
		
		

	}

}
